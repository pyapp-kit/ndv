# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://peps.python.org/pep-0621/
[project]
name = "ndv"
dynamic = ["version"]
description = "Simple, fast-loading, n-dimensional array viewer, with minimal dependencies."
readme = "README.md"
requires-python = ">=3.9"
license = { text = "BSD-3-Clause" }
authors = [
    { name = "Talley Lambert", email = "talley.lambert@gmail.com" },
    { name = "Gabriel Selzer", email = "gjselzer@wisc.edu" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = [
    "cmap >=0.3",
    "numpy >=1.22",
    "psygnal >=0.10",
    "pydantic >=2.9",
    "typing_extensions",
]

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
# Supported GUI frontends
jupyter = ["ipywidgets >=8", "jupyter", "jupyter_rfb >=0.3.3", "glfw"]
qtextras = ["qtpy >=2", "superqt[iconify]>=0.7.1"]
pyqt = ["pyqt6", "ndv[qtextras]"]
pyside = ["pyside6<6.8", "ndv[qtextras]"]
wxpython = ["wxpython"]

# Supported Canavs backends
vispy = ["vispy>=0.14.3", "pyopengl"]
pygfx = ["pygfx>=0.6.0"]

# ready to go bundles with vispy
qt = ["ndv[vispy,pyqt]", "imageio[tifffile]"]
jup = ["ndv[vispy,jupyter]", "imageio[tifffile]"]
wx = ["ndv[vispy,wxpython]", "imageio[tifffile]"]

test = ["imageio[tifffile]", "pytest-cov", "pytest"]
docs = [
    "mkdocs-gen-files==0.5.0",
    "mkdocs-literate-nav==0.6.1",
    "mkdocs-material==9.5.49",
    "mkdocs-minify-plugin==0.8.0",
    "mkdocs==1.6.1",
    "mkdocstrings-python==1.13.0",
    "mkdocs-spellcheck[codespell]==1.1.0",
    "mike==2.1.3",
    "ruff",
]
dev = [
    "ndv[test,vispy,pygfx,pyqt,jupyter]",
    "pytest-qt",
    "ipython",
    "mypy",
    "pdbpp",
    "pre-commit",
    "rich",
    "ruff",
    "ipykernel",
]

third_party_arrays = [
    "aiohttp",                                 # for zarr example
    "jax[cpu]",
    "pooch",                                   # for xarray example
    "pyopencl[pocl]; sys_platform == 'linux'",
    "sparse",
    "tensorstore",
    "numpy<2.0",                               # for tensorstore (at least)
    "torch",
    "xarray",
    "zarr<3",
    "dask[array]",
]

[project.urls]
homepage = "https://github.com/pyapp-kit/ndv"
repository = "https://github.com/pyapp-kit/ndv"

# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src"]

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TC",   # flake8-type-checking
    "TID",  # flake8-tidy-imports
]
ignore = [
    "D401", # First line should be in imperative mood
    "D10",  # Missing docstring...
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]
"examples/*.py" = ["D", "B9"]


# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false # default is false

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ["jupyter_rfb.*", "vispy.*", "ipywidgets.*"]
ignore_missing_imports = true

# https://docs.pytest.org/
[tool.pytest.ini_options]
addopts = ["-v"]
minversion = "7.0"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore:Method has been garbage collected::superqt",
    # occasionally happens on linux CI with vispy
    "ignore:Got wrong number of dimensions",
    "ignore:Unable to import recommended hash",
    # CI-only error on jupyter, vispy, macos
    "ignore:.*Failed to find a suitable pixel format",
    # unsolved python 3.10 warning on shutdown, either xarray or dask
    "ignore:unclosed transport:ResourceWarning",
]
markers = ["allow_leaks: mark test to allow widget leaks"]

# https://coverage.readthedocs.io/
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]


[tool.coverage.run]
source = ["ndv"]
omit = ["src/ndv/viewer/_backends/_protocols.py"]

[tool.check-manifest]
ignore = [".pre-commit-config.yaml", ".ruff_cache/**/*", "tests/**/*"]

[tool.typos.default]
extend-ignore-identifiers-re = ["(?i)nd2?.*", "(?i)ome", ".*ser_schema"]

[tool.typos.files]
extend-exclude = ["**/*.ipynb"]
